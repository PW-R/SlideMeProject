// SelectDriver.controller.js

const pool = require("../db/index");
const dotenv = require("dotenv");
dotenv.config();

exports.SelectDriver = async (req, res) => {
  const orderId = req.params.orderId;
  const { Driver_ID } = req.body;

  console.log("‚úÖ orderId:", orderId);
  console.log("‚úÖ Driver_ID:", Driver_ID);

  if (!Driver_ID || !orderId) {
    return res.status(400).json({ message: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö" });
  }

  try {
    // üîç ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å Driver_ID
    const [[driver]] = await pool.query(
      "SELECT Driver_Name FROM Driver_info WHERE Driver_ID = ?",
      [Driver_ID]
    );

    if (!driver) {
      return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö" });
    }

    const driverName = driver.Driver_Name;

    // üìù ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏•‡∏á OrderDetail
    const [result] = await pool.query(
      "UPDATE OrderDetail SET Order_DriverName = ? WHERE OrderDetail_ID = ?",
      [driverName, orderId]
    );

    if (result.affectedRows === 0) {
      return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö OrderDetail" });
    }

    res.status(200).json({
      message: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!",
    });
  } catch (err) {
    console.error("‚ùå Error selecting driver:", err);
    res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å server", error: err });
  }
};
